# This is a preferred / a working default nginx.conf for nginx-extras-oci.
# This configuration assumes you are using CLOUDFLARE for the DNS challenge. Use CLOUDFLARE or move along.
# This container is meant to be a minimal container for nginx-extras with full functionality of the binaries.
# The only thing you should certainly edit in this file is the DNS resolver segments to customize them for your domain.

user  nginx;
worker_processes auto;
pid /var/run/nginx/nginx.pid;

# Error log to stderr; access logs configured in http
error_log /dev/stderr warn;

# Load dynamic modules declared by the Dockerfile
include /etc/nginx/modules.d/*.conf;

events { worker_connections 2048; }

http {
  # ---------- basics ----------
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  server_tokens off;
  sendfile on;
  tcp_nopush on;

  # ---------- logging ----------
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /dev/stdout main;
  error_log   /dev/stderr warn;

  # ---------- compression ----------
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 5;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # If brotli modules are present:
  brotli on;
  brotli_comp_level 5;
  brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # ---------- Cloudflare real client IP ----------
  include /etc/nginx/cf/ips.conf;

  # ---------- DNS for upstream resolves & OCSP ----------
  resolver 127.0.0.53 valid=30s ipv6=off;
  resolver_timeout 5s;
  proxy_set_header Host $host; # preserve SNI/Host upstream

  # ---------- TLS defaults (edge termination here) ----------
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_session_cache   shared:SSL:50m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;
  ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  # OCSP stapling (public resolvers are fine here)
  ssl_stapling on;
  ssl_stapling_verify on;

  # ---------- security headers ----------
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options DENY always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # ---------- helpers ----------
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 1) internal baked-in endpoints (health, status, etc.)
  include /etc/nginx/_internal/*.conf;

  # 2) your site vhosts live here (mount at runtime if you like)
  include /etc/nginx/conf.d/*.conf;
}